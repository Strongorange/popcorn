{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","Text","props","color","Message","text","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","prototype","number","bool","HomePresenter","nowPlaying","upcoming","topRated","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvShowResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h2","InfoContainer","Info","HoverInfo","Divider","Overview","p","Trailer","CompanyLogoContainer","CompanyLogo","logoUrl","DetailPresenter","result","trailerResults","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","onClick","window","open","icon","faImdb","style","transform","homepage","homeUrl","faHome","production_companies","logo_path","overview","width","height","src","key","frameborder","allow","allowfullscreen","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","request","videos","console","log","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","className","RouterComponent","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10b170e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.9949406e.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"bd520ef6eb381c7a598bd5a2dcecb1df\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  topRated: () => api.get(\"movie/top_rated\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 50px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      🎬🎥📽\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.PropTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 16px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 5px;\n  background-position: center center;\n  transition: opacity 0.15s ease-in-out;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.15s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 14px;\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ✨\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.prototype = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px 20px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying,\n  upcoming,\n  topRated,\n  popular,\n  error,\n  loading,\n}) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"인기 영화 \">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"곧 개봉\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {topRated && topRated.length > 0 && (\n          <Section title=\"최고 인기\">\n            {topRated.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    topRated: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: topRated },\n      } = await moviesApi.topRated();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        topRated,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"영화 정보를 가져오지 못 함\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, topRated, popular, error, loading } =\n      this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        topRated={topRated}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"최고 평점\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"인기\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"오늘 방송\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"TV 프로그램 정보를 가져올 수 없음\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvShowResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"검색\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"영화\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date ? movie.release_date.substring(0, 4) : \"\"\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvShowResults && tvShowResults.length > 0 && (\n          <Section title=\"TV 프로그램\">\n            {tvShowResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n        {tvShowResults &&\n          movieResults &&\n          tvShowResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"결과 없음\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvShowResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvShowResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true,\n    });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n\n      const {\n        data: { results: tvShowResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvShowResults,\n      });\n    } catch {\n      this.setState({ error: \"영화/TV 프로그램이 없음\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvShowResults, searchTerm, error, loading } =\n      this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvShowResults={tvShowResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faImdb } from \"@fortawesome/free-brands-svg-icons\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst BASE_YOUTUBE = \"https://www.youtube.com/watch?v=\";\nconst BASE_IMDB = \"https://www.imdb.com/title/\";\nconst BASE_IMAGE = \"https://image.tmdb.org/t/p/w500\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 8px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h2`\n  font-size: 40px;\n  margin-bottom: 10px;\n`;\n\nconst InfoContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Info = styled.span`\n  font-size: 20px;\n`;\n\nconst HoverInfo = styled.span`\n  font-size: 20px;\n  margin: 0px 10px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 19px;\n  color: rgba(255, 255, 255, 0.8);\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Trailer = styled.div`\n  margin-top: 30px;\n`;\n\nconst CompanyLogoContainer = styled.div`\n  background-color: rgba(255, 255, 255, 0.2);\n  width: 11vw;\n  height: 7vh;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst CompanyLogo = styled.div`\n  background-image: url(${(props) => props.logoUrl});\n  width: 10vw;\n  height: 10vh;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n\nconst handleImdb = (imdb_id) => {\n  window.open(`${BASE_IMDB}${imdb_id}`);\n};\n\nconst handleHomepage = (homeUrl) => {\n  window.open(`${homeUrl}`);\n};\n\nconst DetailPresenter = ({ result, trailerResults, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <InfoContainer>\n            <Info>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Info>\n            <Divider>▫</Divider>\n            <Info>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Info>\n            <Divider>▫</Divider>\n            <Info>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Info>\n            {result.imdb_id && (\n              <>\n                <Divider>▫</Divider>\n                <HoverInfo onClick={() => handleImdb(result.imdb_id)}>\n                  <FontAwesomeIcon\n                    icon={faImdb}\n                    style={{ transform: \"scale(2, 1.5)\" }}\n                  />\n                </HoverInfo>\n              </>\n            )}\n            {result.homepage && (\n              <>\n                <Divider>▫</Divider>\n                <HoverInfo onClick={() => handleHomepage(result.homepage)}>\n                  <FontAwesomeIcon icon={faHome} />\n                </HoverInfo>\n              </>\n            )}\n            {result.production_companies && (\n              <>\n                <CompanyLogoContainer>\n                  <CompanyLogo\n                    logoUrl={`${BASE_IMAGE}${result.production_companies[0].logo_path}`}\n                  ></CompanyLogo>\n                </CompanyLogoContainer>\n              </>\n            )}\n          </InfoContainer>\n          <Overview>{result.overview ? result.overview : \"\"}</Overview>\n          {trailerResults && trailerResults.length > 0 && (\n            <Trailer>\n              <iframe\n                width=\"560\"\n                height=\"315\"\n                src={`https://www.youtube.com/embed/${trailerResults[0].key}`}\n                title=\"YouTube video player\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              ></iframe>\n            </Trailer>\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  trailerResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      trailerResults: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    let trailerResults = null;\n    try {\n      if (isMovie) {\n        const request = await moviesApi.movieDetail(parsedId);\n        result = request.data;\n        trailerResults = request.data.videos.results;\n      } else {\n        const request = await tvApi.showDetail(parsedId);\n        result = request.data;\n        trailerResults = request.data.videos.results;\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"정보를 찾을 수 없음\" });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n        trailerResults,\n      });\n    }\n  }\n\n  render() {\n    const { result, trailerResults, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        trailerResults={trailerResults}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header className=\"nav\">\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\nimport Header from \"./Header\";\n\nconst RouterComponent = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/tv\" exact component={TV}></Route>\n          <Route path=\"/search\" component={Search}></Route>\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </Router>\n  );\n};\n\nexport default RouterComponent;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset}\n  /* other styles */\n  a{\n      text-decoration: none;\n      color: inherit;\n    }\n  *{\n      box-sizing: border-box;\n    }\n  body{\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n      font-size: 12px;\n      background-color: rgba(20,20,20,1);\n      color: white;\n      padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport RouterComponent from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <RouterComponent />\n      <GlobalStyles />\n    </>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}