{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","Text","props","color","Message","text","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","prototype","number","bool","HomePresenter","nowPlaying","upcoming","topRated","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvShowResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","BASE_IMAGE","Backdrop","bgImage","Content","Cover","Data","h2","InfoContainer","Info","HoverInfo","Divider","Overview","p","TrailersContainer","Trailer","CompanyLogoContainer","CompanyLogo","logoUrl","CollectionContainer","CollectionCover","imgUrl","CollectionTitle","SLink","Link","SeasonsContainer","SeasonContainer","SeasonCover","DetailPresenter","result","trailerResults","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","onClick","window","open","icon","faImdb","style","transform","homepage","homeUrl","faHome","production_companies","logo_path","overview","trailer","url","key","width","height","src","frameborder","allow","allowfullscreen","belongs_to_collection","pathname","collectionInfo","seasons","fontSize","padding","season","DetailContainer","location","includes","match","push","history","parsedId","parseInt","isNaN","request","videos","console","log","CollectionPresenter","undefined","Header","header","List","ul","Item","li","current","withRouter","className","RouterComponent","path","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca2bcf01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.9949406e.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"bd520ef6eb381c7a598bd5a2dcecb1df\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 50px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🎬🎥📽\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.PropTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  background-position: center center;\r\n  transition: opacity 0.15s ease-in-out;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.15s ease-in-out;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.5);\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ✨\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  nowPlaying,\r\n  upcoming,\r\n  topRated,\r\n  popular,\r\n  error,\r\n  loading,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기 영화 \">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"곧 개봉\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"최고 인기\">\r\n            {topRated.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport { moviesApi } from \"../../api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    topRated: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await moviesApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        topRated,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"영화 정보를 가져오지 못 함\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, topRated, popular, error, loading } =\r\n      this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        topRated={topRated}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"최고 평점\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"오늘 방송\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport { tvApi } from \"../../api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"TV 프로그램 정보를 가져올 수 없음\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvShowResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"검색\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"영화\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={\r\n                  movie.release_date ? movie.release_date.substring(0, 4) : \"\"\r\n                }\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvShowResults && tvShowResults.length > 0 && (\r\n          <Section title=\"TV 프로그램\">\r\n            {tvShowResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date ? show.first_air_date.substring(0, 4) : \"\"\r\n                }\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\r\n        {tvShowResults &&\r\n          movieResults &&\r\n          tvShowResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"결과 없음\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvShowResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvShowResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvShowResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvShowResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"영화/TV 프로그램이 없음\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvShowResults, searchTerm, error, loading } =\r\n      this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvShowResults={tvShowResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faImdb } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst BASE_IMDB = \"https://www.imdb.com/title/\";\r\nconst BASE_IMAGE = \"https://image.tmdb.org/t/p/w500\";\r\nconst BASE_YOUTUBE = (url) => (\r\n  <iframe\r\n    width=\"320\"\r\n    height=\"180\"\r\n    src={`https://www.youtube.com/embed/${url}`}\r\n    title=\"YouTube video player\"\r\n    frameborder=\"0\"\r\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n    allowfullscreen\r\n  ></iframe>\r\n);\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 40px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Info = styled.span`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst HoverInfo = styled.span`\r\n  font-size: 20px;\r\n  margin: 0px 10px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 19px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst TrailersContainer = styled.div`\r\n  margin-top: 30px;\r\n  overflow-x: scroll;\r\n  display: flex;\r\n  padding-bottom: 15px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Trailer = styled.div`\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst CompanyLogoContainer = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  width: 11vw;\r\n  height: 7vh;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst CompanyLogo = styled.div`\r\n  background-image: url(${(props) => props.logoUrl});\r\n  width: 10vw;\r\n  height: 10vh;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n`;\r\n\r\nconst CollectionContainer = styled.div`\r\n  width: 180px;\r\n  height: 250px;\r\n  margin-left: -12px;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CollectionCover = styled.div`\r\n  background-image: url(${(props) => props.imgUrl});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  width: 180px;\r\n  height: 250px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CollectionTitle = styled.span`\r\n  font-size: 18px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SLink = styled(Link)``;\r\n\r\nconst SeasonsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  overflow-x: scroll;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst SeasonCover = styled.div`\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  width: 200px;\r\n  height: 200px;\r\n`;\r\n\r\nconst handleImdb = (imdb_id) => {\r\n  window.open(`${BASE_IMDB}${imdb_id}`);\r\n};\r\n\r\nconst handleHomepage = (homeUrl) => {\r\n  window.open(`${homeUrl}`);\r\n};\r\n\r\nconst DetailPresenter = ({ result, trailerResults, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <InfoContainer>\r\n            <Info>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Info>\r\n            <Divider>▫</Divider>\r\n            <Info>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Info>\r\n            <Divider>▫</Divider>\r\n            <Info>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Info>\r\n            {result.imdb_id && (\r\n              <>\r\n                <Divider>▫</Divider>\r\n                <HoverInfo onClick={() => handleImdb(result.imdb_id)}>\r\n                  <FontAwesomeIcon\r\n                    icon={faImdb}\r\n                    style={{ transform: \"scale(2, 1.5)\" }}\r\n                  />\r\n                </HoverInfo>\r\n              </>\r\n            )}\r\n            {result.homepage && (\r\n              <>\r\n                <Divider>▫</Divider>\r\n                <HoverInfo onClick={() => handleHomepage(result.homepage)}>\r\n                  <FontAwesomeIcon icon={faHome} />\r\n                </HoverInfo>\r\n              </>\r\n            )}\r\n            {result.production_companies[0].logo_path ? (\r\n              <>\r\n                <CompanyLogoContainer>\r\n                  <CompanyLogo\r\n                    logoUrl={`${BASE_IMAGE}${result.production_companies[0].logo_path}`}\r\n                  ></CompanyLogo>\r\n                </CompanyLogoContainer>\r\n              </>\r\n            ) : null}\r\n          </InfoContainer>\r\n          <Overview>{result.overview ? result.overview : \"\"}</Overview>\r\n          {trailerResults && trailerResults.length > 0 && (\r\n            <TrailersContainer>\r\n              {trailerResults.map((trailer) => (\r\n                <Trailer>{BASE_YOUTUBE(trailer.key)}</Trailer>\r\n              ))}\r\n            </TrailersContainer>\r\n          )}\r\n          {result.belongs_to_collection && result.belongs_to_collection.id && (\r\n            <>\r\n              <CollectionContainer>\r\n                <SLink\r\n                  to={{\r\n                    pathname: `/collection/${result.id}/${result.belongs_to_collection.id}`,\r\n                    state: {\r\n                      collectionInfo: result.belongs_to_collection,\r\n                    },\r\n                  }}\r\n                >\r\n                  <CollectionCover\r\n                    imgUrl={`${BASE_IMAGE}${result.belongs_to_collection.poster_path}`}\r\n                  ></CollectionCover>\r\n                  <CollectionTitle>\r\n                    {result.belongs_to_collection.name}\r\n                  </CollectionTitle>\r\n                </SLink>\r\n              </CollectionContainer>\r\n            </>\r\n          )}\r\n          {result.seasons && (\r\n            <>\r\n              <Title style={{ fontSize: \"32px\", padding: \"10px 0px\" }}>\r\n                시즌\r\n              </Title>\r\n              <SeasonsContainer>\r\n                {result.seasons.map((season, index) => (\r\n                  <>\r\n                    <SeasonContainer>\r\n                      <SeasonCover\r\n                        key={season.id}\r\n                        bgImage={`${BASE_IMAGE}${season.poster_path}`}\r\n                      />\r\n                    </SeasonContainer>\r\n                  </>\r\n                ))}\r\n              </SeasonsContainer>\r\n            </>\r\n          )}\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  trailerResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      trailerResults: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let trailerResults = null;\r\n    try {\r\n      if (isMovie) {\r\n        const request = await moviesApi.movieDetail(parsedId);\r\n        result = request.data;\r\n        trailerResults = request.data.videos.results;\r\n      } else {\r\n        const request = await tvApi.showDetail(parsedId);\r\n        result = request.data;\r\n        trailerResults = request.data.videos.results;\r\n      }\r\n      console.log(result);\r\n    } catch {\r\n      this.setState({ error: \"정보를 찾을 수 없음\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n        result,\r\n        trailerResults,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, trailerResults, error, loading } = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        trailerResults={trailerResults}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst BASE_IMAGE = \"https://image.tmdb.org/t/p/w500\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 8px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h2`\n  font-size: 40px;\n  margin-bottom: 10px;\n`;\n\nconst InfoContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Info = styled.span`\n  font-size: 20px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst CollectionPresenter = ({ collectionInfo }) => (\n  <>\n    {console.log(\"presenter!\", collectionInfo)}\n    <Container>\n      <Helmet>\n        <title>{collectionInfo.name}</title>\n      </Helmet>\n      <Backdrop bgImage={`${BASE_IMAGE}${collectionInfo.backdrop_path}`} />\n      <Content>\n        <Cover\n          bgImage={\n            collectionInfo.poster_path\n              ? `${BASE_IMAGE}${collectionInfo.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{collectionInfo.name && collectionInfo.name}</Title>\n        </Data>\n      </Content>\n    </Container>\n  </>\n);\n\nCollectionPresenter.propTypes = {\n  collectionInfo: PropTypes.object.isRequired,\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport CollectionPresenter from \"./CollectionPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    collectionInfo: null,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        location: {\n          state: { collectionInfo },\n        },\n        history: { push },\n      } = this.props;\n      if (collectionInfo === undefined) {\n        return push(\"/\");\n      }\n    } catch {\n      this.setState({ error: \"시리즈 정보를 찾을 수 없음\" });\n    }\n  }\n\n  render() {\n    const {\n      location: {\n        state: { collectionInfo },\n      },\n    } = this.props;\n\n    return <CollectionPresenter collectionInfo={collectionInfo} />;\n  }\n}\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header className=\"nav\">\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\nimport Collection from \"../Routes/Collection\";\r\nimport Header from \"./Header\";\r\n\r\nconst RouterComponent = () => {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home}></Route>\r\n          <Route path=\"/tv\" exact component={TV}></Route>\r\n          <Route path=\"/search\" component={Search}></Route>\r\n          <Route path=\"/movie/:id\" component={Detail} />\r\n          <Route path=\"/show/:id\" component={Detail} />\r\n          <Route path=\"/collection/:id/:collectionId\" component={Collection} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterComponent;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset}\r\n  /* other styles */\r\n  a{\r\n      text-decoration: none;\r\n      color: inherit;\r\n    }\r\n  *{\r\n      box-sizing: border-box;\r\n    }\r\n  body{\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n      font-size: 12px;\r\n      background-color: rgba(20,20,20,1);\r\n      color: white;\r\n      padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport RouterComponent from \"./Router\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <RouterComponent />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}